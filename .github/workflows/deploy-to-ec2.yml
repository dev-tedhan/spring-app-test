name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    if: github.repository == 'spring-app-test/spring-app-test'
    runs-on: ubuntu-22.04

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
      KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
      NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
      NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Generate JWT secret
      run: |
        SECRET=$(openssl rand -base64 32)
        echo "JWT_SECRET=$SECRET" >> $GITHUB_ENV
      
    - name: Debug EC2_HOST
      run: echo "EC2_HOST is ${{ secrets.EC2_HOST }}"

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
    - name: Copy project to EC2
      run: |
        rsync -avz -e "ssh -i ~/.ssh/id_rsa" . ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/app
    - name: Build & Run Docker on EC2
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          cd /home/ubuntu/app
          docker stop app || true
          docker rm app || true
          docker rmi app || true
          docker build -t app .
          docker run -d -p 80:10000 --name app \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            -e AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
            -e GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
            -e KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} \
            -e KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }} \
            -e NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }} \
            -e NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }} \
            -e JWT_SECRET=$JWT_SECRET \
            app
    - name: Clean up dangling images
      run: docker image prune -f
